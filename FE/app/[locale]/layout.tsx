import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/header";
import Navbar from "@/components/navbar";
import Footer from "@/components/footer";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { AuthProvider } from "@/providers/auth-provider";
import TanstackProvider from "@/providers/tanstack-provider";
import { Toaster } from "sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
  popularProducts,
  newsLetter,
  latestDeals,
  shopByCategory,
  shopBy,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
  popularProducts: React.ReactNode;
  newsLetter: React.ReactNode;
  latestDeals: React.ReactNode;
  shopByCategory: React.ReactNode;
  shopBy: React.ReactNode;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html
      lang={locale}
      className={locale === "ar" ? "font-cairo" : "font-quicksand"}
      dir={locale === "ar" ? "rtl" : "ltr"}
    >
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-100! min-h-screen max-w-[2180px] m-auto text-text-primary!`}
      >
        <AuthProvider>
          <NextIntlClientProvider>
            <TanstackProvider>
              <Header />
              <Navbar />
              <main className="px-8">
                <div className="flex flex-row p-2">
                  {/* <FiltersToolbar /> */}
                  <div className="flex flex-col w-full">
                    {newsLetter}
                    {popularProducts}
                    {latestDeals}
                    {shopByCategory}
                    {shopBy}
                    {children}
                    {newsLetter}
                  </div>
                </div>
              </main>
              <Toaster />
              <Footer />
            </TanstackProvider>
          </NextIntlClientProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
